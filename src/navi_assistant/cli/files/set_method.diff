--- Original/set_method.py  2023-10-09 12:00:00.000000000 +0000
+++ Improved/set_method.py  2023-10-09 12:00:00.000000000 +0000
@@ -1,18 +1,54 @@
 import os
 import click

+@click.command()
 @click.option(
     "--global", "use_global", is_flag=True, help="Use the global configuration"
 )
 @click.option(
     "--dirs",
     "-d",
     type=str,
     multiple=True,
     help="List of directories to be searched for store files",
 )
 @click.option(
     "--file-exts",
     "-e",
     type=str,
     multiple=True,
     help="List of file extensions to be included in the store",
 )
+@click.option(
+    "--no-dirs",
+    is_flag=True,
+    help="Option to explicitly not set any directories for store files",
+)
-def set(dirs: list[str], file_exts: list[str], use_global: bool = False):
+def set(dirs: list[str], file_exts: list[str], no_dirs: bool, use_global: bool = False):
     """Set the store files for the assistant."""
     click.echo(art.styled_fairy + messaging.make_header("Tools:Files"))

     navi = Navi(use_global)

     if navi.is_global:
         click.echo(messaging.make_warning("Global configuration"))
+
+    if no_dirs:
+        # If --no-dirs is set, ignore any provided directories and set to an empty list
+        valid_dirs = []
+    else:
+        config_dir = navi.get_config_dir()  # Assuming there's a method to get the config dir
+        valid_dirs = []
+        for directory in dirs:
+            full_path = os.path.join(config_dir, directory)
+            if os.path.isdir(full_path):
+                valid_dirs.append(directory)
+            else:
+                click.echo(messaging.make_error(f"Invalid directory: {directory} (full path: {full_path})"), err=True)
+
+    valid_exts = []
+    for ext in file_exts:
+        if ext.isalnum():
+            valid_exts.append(ext)
+        else:
+            click.echo(messaging.make_error(f"Invalid file extension: {ext}"), err=True)
+
+    if not no_dirs and not valid_dirs:
+        click.echo(messaging.make_error("No valid directories provided"), err=True)
+        return
+
+    if not valid_exts:
+        click.echo(messaging.make_error("No valid file extensions provided"), err=True)
+        return
+
+    if no_dirs:
+        click.echo(messaging.make_warning("No directories set for store files. Files will not be uploaded."))
+    else:
+        click.echo(messaging.make_info("Setting store file directories to: " + ", ".join(valid_dirs)))
+        navi.config["store_folders"] = valid_dirs
+
+    click.echo(messaging.make_info("Setting store file extensions to: " + ", ".join(valid_exts)))
     navi.config["store_folders"] = valid_dirs
     navi.config["store_file_extensions"] = file_exts

     navi.save_config()
     click.echo(messaging.make_info("Configuration saved successfully."))
